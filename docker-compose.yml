services:
  db:
    image: postgres:latest
    container_name: jwt-db
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: jwt-pgadmin
    depends_on:
      - db
    ports:
      - '5555:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
    logging:
      driver: none

  server:
    build: ./server
    container_name: jwt-server
    command: npm run start
    restart: unless-stopped
    ports:
      - '${AUTH_SERVER_PORT}:${AUTH_SERVER_PORT}'
      - '${POSTS_SERVER_PORT}:${POSTS_SERVER_PORT}'
    environment:
      - AUTH_SERVER_PORT=${AUTH_SERVER_PORT}
      - POSTS_SERVER_PORT=${POSTS_SERVER_PORT}
      - CLIENT_PORT=${CLIENT_PORT}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db

  client:
    build: ./client
    container_name: jwt-client
    command: npm run preview
    restart: unless-stopped
    ports:
      - '24678:24678'
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    environment:
      - AUTH_SERVER_PORT=${AUTH_SERVER_PORT}
      - POSTS_SERVER_PORT=${POSTS_SERVER_PORT}
      - PORT=${CLIENT_PORT}
      - SERVER_HOST=${SERVER_HOST}

volumes:
  postgres-data:
  pgadmin-data:
